{"version":3,"file":"static/webpack/static/development/pages/index.js.dc90351de4ceb596069c.hot-update.js","sources":["webpack:///./components/content/reminder.js"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectReminder, deleteReminder } from \"../../actions\";\n\nclass Reminder extends React.Component {\n  render() {\n    let isSelected = this.props.selectedReminderId === this.props.reminder.id\n    return (\n      <div \n        className={isSelected ? \"reminderContainer selected\":\"reminderContainer\"}>\n        <div onClick={() => this.props.selectReminder(isSelected ? null:this.props.reminder.id)}>{this.props.reminder.content}</div>\n        {isSelected && \n          <div className=\"reminderToolbar\">\n            <div\n              onClick={() => this.props.deleteReminder(this.props.reminder.id)}\n              className=\"actionButton delete\">\n              Delete\n            </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  deleteReminder: (reminderToDeleteId) => {\n    dispatch(deleteReminder(reminderToDeleteId));\n    dispatch(selectReminder(null));\n  },\n  selectReminder: (newSelected) => {\n    dispatch(selectReminder(newSelected));\n  }\n});\n\nconst mapStateToProps = state => {\n  return {\n    selectedReminderId: state.reminders.selectedId\n  };\n};\n\nReminder = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Reminder);\nexport default Reminder;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAEA;AADA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AASA;;;;AAlBA;AACA;AAoBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AACA;AASA;AACA;AACA;AADA;AAGA;AACA;AACA;AAIA;;;;A","sourceRoot":""}